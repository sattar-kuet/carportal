title = "Update Client"
url = "/dashboard/clients/:id/edit"
layout = "admin"
is_hidden = 0
role = 0
permission = 0
anonymous_only = 0
logged_only = 1
child_of = "dashboard/clients"
menu_breadcrumb = "client"
hide_crumb = 0
remove_crumb_trail = 0
crumb_disabled = 0

[viewBag]
==
<?php
function onStart() {
    if(!Auth::getUser()->hasUserPermission(["client"],'u')) {
        \Flash::error($this['theme_lang']['not_allowed']);
        return Redirect::to('dashboard/clients');
    }
    $this['item']           =   \RainLab\User\Models\User::find($this->param('id'));
    $this['countries']      =   \RainLab\Location\Models\Country::where('is_enabled', 1)->get();


    $this['getData'] = new class {
        public function states($selected,$country_id,$select = null)
        {
            $states         =   \RainLab\Location\Models\State::where('country_id', $country_id)->get();
            foreach($states as $state){
                $select .= '<option value="'.$state->id.'" '.(($selected == $state->id) ? 'selected' : '').'>'.$state->name.'</option>';
            }
            echo $select;
        }
        public function cities($selected,$state_id,$select = null)
        {
            $cities         =   \Spot\Shipment\Models\City::where('state_id', $state_id)->get();
            foreach($cities as $city){
                $select .= '<option value="'.$city->id.'" '.(($selected == $city->id) ? 'selected' : '').'>'.$city->name.'</option>';
            }
            echo $select;
        }
        public function areas($selected,$city_id,$select = null)
        {
            $areas         =   \Spot\Shipment\Models\Area::where('city_id', $city_id)->get();
            foreach($areas as $area){
                $select .= '<option value="'.$area->id.'" '.(($selected == $area->id) ? 'selected' : '').'>'.$area->name.'</option>';
            }
            echo $select;
        }
    };
}

function onListstates(){
    if(null !== post('id')){
        $items          = RainLab\Location\Models\State::where('country_id', post('id'))->get();
        $html = '<option data-hidden="true"></option>';
        if($items){
            foreach($items as $item){
                $html .= '<option value="'.$item->id.'">'.$item->name.'</option>';
            }

        }
        return array('html'=>$html);
    }
}
function onListcities(){
    if(null !== post('id')){
        $items          = Spot\Shipment\Models\City::where('state_id', post('id'))->get();
        $html = '<option data-hidden="true"></option>';
        if($items){
            foreach($items as $item){
                $html .= '<option value="'.$item->id.'">'.$item->name.'</option>';
            }

        }
        return array('html'=>$html);
    }
}
function onListareas(){
    if(null !== post('id')){
        $items          = Spot\Shipment\Models\Area::where('city_id', post('id'))->get();
        $html = '<option data-hidden="true"></option>';
        if($items){
            foreach($items as $item){
                $html .= '<option value="'.$item->id.'">'.$item->name.'</option>';
            }

        }
        return array('html'=>$html);
    }
}
function onSave()
{

   // throw new ApplicationException('NOT ALLAOWED IN DEMO');
   // return false;
   // if(!Auth::getUser()->hasUserPermission(["client"],'u')) {
   //     throw new ApplicationException($this['theme_lang']['not_allowed']);
   // }
    $data = post();

    \RainLab\User\Models\User::extend(function($model){
        $myrules['email'] = 'required|between:6,255|email|unique:users';
        $myrules['mobile'] = 'required|unique:users,deleted_at,NULL';
        $myrules['username'] = 'required|between:2,255|unique:users';
        $myrules['password'] = 'required';
        $model->rules = $myrules;
        $model->customMessages['mobile.unique'] = $this['theme_lang']['mobile_already_registered'];
        $model->customMessages['email.unique'] = $this['theme_lang']['email_already_registered'];
        $model->customMessages['username.unique'] = $this['theme_lang']['username_already_registered'];
    });

    $item                   = \RainLab\User\Models\User::find($this->param('id'));
    $item->name             = htmlspecialchars($data['name']);
    $item->email            = htmlspecialchars($data['email']);
    $item->username         = htmlspecialchars($data['username']);
    if(isset($data['password']) && $data['password'] != null && !empty($data['password']) && $data['password'] != ''){
        if(isset($data['password_confirmation']) && $data['password_confirmation'] != null && !empty($data['password_confirmation']) && $data['password_confirmation'] != '' && $data['password_confirmation'] == $data['password']){
            $password                       = \Hash::make($data['password']);
            $item->password                 = $password;
            $item->password_confirmation    = $password;
        }
    }
    if(isset($data['mobile']) && $data['mobile'] != ''){
        $item->mobile           = htmlspecialchars($data['mobile']);
    }
    if(isset($data['phone']) && $data['phone'] != ''){
        $item->phone            = htmlspecialchars($data['phone']);
    }
    if(isset($data['gender']) && $data['gender'] != ''){
        $item->gender           = htmlspecialchars($data['gender']);
    }
    $item->updated_at       = \Carbon\Carbon::now();
    $item->update();

    if(isset($data['password']) && $data['password'] != null && !empty($data['password']) && $data['password'] != ''){
        if(isset($data['password_confirmation']) && $data['password_confirmation'] != null && !empty($data['password_confirmation']) && $data['password_confirmation'] != '' && $data['password_confirmation'] == $data['password']){
            \RainLab\User\Models\User::where('id', $item->id)->update(['password' => \Hash::make($data['password']) ]);
        }
    }

    $ids = [];
    foreach($data['addresses'] as $address){
        if(isset($address['id'])){
            $ids[]  =   $address['id'];
            $subitem                    = \Spot\Shipment\Models\Address::find($address['id']);
            $subitem->name              = htmlspecialchars($address['name']);
            $subitem->street            = htmlspecialchars($address['street_address']);
            $subitem->county            = htmlspecialchars($address['county']);
            $subitem->city              = htmlspecialchars($address['city']);
            $subitem->state             = htmlspecialchars($address['state']);
            $subitem->zipcode           = htmlspecialchars($address['postal_code']);
            $subitem->country           = htmlspecialchars($address['country']);
            $subitem->lat               = htmlspecialchars($address['lat']);
            $subitem->lng               = htmlspecialchars($address['lng']);
            $subitem->url               = htmlspecialchars($address['url']);
            $subitem->default           = htmlspecialchars($address['default']);
            $subitem->updated_at        = \Carbon\Carbon::now();
            $subitem->update();
        }else{
            $subitem                    = new \Spot\Shipment\Models\Address;
            $subitem->user_id           = $item->id;
            $subitem->name              = htmlspecialchars($address['name']);
            $subitem->street            = htmlspecialchars($address['street_address']);
            $subitem->county            = htmlspecialchars($address['county']);
            $subitem->city              = htmlspecialchars($address['city']);
            $subitem->state             = htmlspecialchars($address['state']);
            $subitem->zipcode           = htmlspecialchars($address['postal_code']);
            $subitem->country           = htmlspecialchars($address['country']);
            $subitem->lat               = htmlspecialchars($address['lat']);
            $subitem->lng               = htmlspecialchars($address['lng']);
            $subitem->url               = htmlspecialchars($address['url']);
            $subitem->default           = htmlspecialchars($address['default']);
            $subitem->created_at        = \Carbon\Carbon::now();
            $subitem->updated_at        = \Carbon\Carbon::now();
            $subitem->save();

            $ids[]  =   $subitem->id;
        }
    }
    \Spot\Shipment\Models\Address::whereNotIn('id', $ids)->delete();

    \Flash::success($this['theme_lang']['created_successfully']);
    return Redirect::to('dashboard/clients');
}
?>
==
<div class="kt-grid kt-grid--desktop kt-grid--ver-desktop  kt-inbox" id="kt_inbox">
    <!--Begin:: Inbox List-->
    <div class="kt-grid__item kt-grid__item--fluid    kt-portlet    kt-inbox__list kt-inbox__list--shown" id="kt_inbox_list">
        <div class="kt-portlet__head">
    		<div class="kt-portlet__head-label">
    			<h3 class="kt-portlet__head-title">
    				{{this.page.title|__}}
    			</h3>
    		</div>
        </div>
        {{ form_ajax('onSave', { id: 'kt_form', flash: true, class:'kt_form' }) }}
            <div class="kt-portlet__body kt-portlet__body--fit-x kt-padding-r-20 kt-padding-l-20">
                <div class="form-group form-group-last kt-hide">
                    <div class="alert alert-danger kt_form_msg" role="alert">
                        <div class="alert-icon"><i class="flaticon-warning"></i></div>
                        <div class="alert-text">
                            {{'Oh snap! Change a few things up and try submitting again'|__}}.
                        </div>
                        <div class="alert-close">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true"><i class="la la-close"></i></span>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-xl-3 col-lg-3 col-form-label">{{'Full Name'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                    <div class="col-lg-9 col-xl-6">
    					<input type="text" class="form-control" name="name" value="{{item.name}}" required />
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-xl-3 col-lg-3 col-form-label">{{'Email'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                    <div class="col-lg-9 col-xl-6">
    					<input type="email" class="form-control" name="email" value="{{item.email}}" required />
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-xl-3 col-lg-3 col-form-label">{{'Username'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                    <div class="col-lg-9 col-xl-6">
    					<input type="text" class="form-control" name="username" value="{{item.username}}" required />
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-xl-3 col-lg-3 col-form-label">{{'Password'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                    <div class="col-lg-9 col-xl-6">
    					<input type="password" class="form-control" name="password" />
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-xl-3 col-lg-3 col-form-label">{{'Password Confirmation'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                    <div class="col-lg-9 col-xl-6">
    					<input type="password" class="form-control" name="password_confirmation" />
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-xl-3 col-lg-3 col-form-label">{{'Mobile Number'|__}}</label>
                    <div class="col-lg-9 col-xl-6">
    					<input type="text" class="form-control" name="mobile" value="{{item.mobile}}"/>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-xl-3 col-lg-3 col-form-label">{{'Phone Number'|__}}</label>
                    <div class="col-lg-9 col-xl-6">
    					<input type="text" class="form-control" name="phone" value="{{item.phone}}" />
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-xl-3 col-lg-3 col-form-label">{{'Gender'|__}}</label>
                    <div class="col-lg-9 col-xl-6">
                        <div class="kt-radio-inline">
							<label class="kt-radio">
								<input type="radio" name="gender" class="gender" value="male" {% if item.gender == 'male' %}checked{% endif %}> {{'Male'|__}}
								<span></span>
							</label>
							<label class="kt-radio">
								<input type="radio" name="gender" class="gender" value="female" {% if item.gender == 'female' %}checked{% endif %}> {{'Female'|__}}
								<span></span>
							</label>
						</div>
                    </div>
                </div>
                <div class="location-complete">
                        <div class="row">
                             <div class="form-group col-lg-12">
                                <label>{{'Address'|__}}&nbsp;<span class="kt-badge kt-badge--danger kt-badge--dot"></span></label>
                                <input type="text" class="form-control" name="address" id="address">
                                <input type="hidden" class="form-control" name="lat" value="0" />
                                <input type="hidden" class="form-control" name="lng" value="0" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-xl-3 col-lg-3 col-form-label">{{'Google Map'|__}}</label>
                            <div class="col-lg-9 col-xl-6">
                                <div id="map_canvas" class="col-sm-12"></div>
                                <span class="form-text text-muted">{{'Change the pin to select the right location'|__}}</span>
                            </div>
                        </div>
                </div>
            </div>
    		<div class="kt-portlet__foot">
    			<div class="row">
    				<div class="col-lg-8">
                    </div>
    				<div class="col-lg-4">
    					<button type="submit" class="btn btn-primary">{{'Save'|__}}</button>
    					<span class="kt-margin-left-10">{{'or'|__}} <a href="{{url('dashboard/clients')}}" class="kt-link">{{'Cancel'|__}}</a></span>
    				</div>
    			</div>
    		</div>
    	{{ form_close() }}
    </div>
</div>


{% put styles %}
    <style>
        .map_canvas {
          height: 350px;
        }
    </style>
{% endput %}
{% put scripts %}
<script src="{{ 'assets/admin/vendors/custom/geocomplete/jquery.geocomplete.js'|theme }}" type="text/javascript"></script>
<script src="//maps.googleapis.com/maps/api/js?libraries=places&key={{settings.google.map.key}}"></script>
<script type="text/javascript">
    $( ".kt_form" ).validate({
        // define validation rules
        /*
        rules: {
            digits: {
                required: true,
                digits: true,
                creditcard: true,
                phoneUS: true,
                required: true,
                minlength: 10,
                maxlength: 100
            },
        },
        */

        //display error alert on form submit
        invalidHandler: function(event, validator) {
            var alert = $('.kt_form_msg');
            alert.removeClass('kt--hide').show();
            KTUtil.scrollTop();
        },

        submitHandler: function (form) {
            form[0].submit(); // submit the form
        }
    });

    var n = 0;

    {% for address in item.addresses %}
    var map_canvas  = $('.map_canvas_{{address.id}}');
    var map_data    = $(this).parent().find(".location");
        $('.edit_address_{{address.id}}').geocomplete({
            map: map_canvas,
            location: [{{address.lat}},{{address.lng}}],
            mapOptions: {
                zoom: 18
            },
            markerOptions: {
                draggable: true
            },
            details: map_data,
            detailsAttribute: "data-location"
        });
         $(this).parent().find(".edit_address_{{address.id}}").bind("geocode:dragged", function(event, latLng){
             $(this).parent().find("input.lat").val(latLng.lat());
             $(this).parent().find("input.lng").val(latLng.lng());
        });
    {% endfor %}

    $('body').on('changed.bs.select', '.country_id_repeater', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
        var repeater_item = $(this);
        if(selected != ''){
            $.request('onListstates', {
                data: {id: selected},
                success: function(data) {
                    repeater_item.parent().parent().parent().parent().find('.state_id_repeater').selectpicker("destroy");
                    repeater_item.parent().parent().parent().parent().find('.state_id_repeater').attr('title', '{{"Nothing Selected"|__}}');
                    repeater_item.parent().parent().parent().parent().find('.state_id_repeater').html(data.html);
                    repeater_item.parent().parent().parent().parent().find('.state_id_repeater').selectpicker("refresh");
                }
            });
        }
    });
    $('body').on('changed.bs.select', '.state_id_repeater', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
        var repeater_item = $(this);
        if(selected != ''){
            $.request('onListcities', {
                data: {id: selected},
                success: function(data) {
                    repeater_item.parent().parent().parent().parent().find('.city_id_repeater').selectpicker("destroy");
                    repeater_item.parent().parent().parent().parent().find('.city_id_repeater').attr('title', '{{"Nothing Selected"|__}}');
                    repeater_item.parent().parent().parent().parent().find('.city_id_repeater').html(data.html);
                    repeater_item.parent().parent().parent().parent().find('.city_id_repeater').selectpicker("refresh");
                }
            });
        }
    });
    $('body').on('changed.bs.select', '.city_id_repeater', function(e, clickedIndex, newValue, oldValue){
        var selected = $(e.currentTarget).val();
        var repeater_item = $(this);
        if(selected != ''){
            $.request('onListareas', {
                data: {id: selected},
                success: function(data) {
                    repeater_item.parent().parent().parent().parent().find('.area_id_repeater').selectpicker("destroy");
                    repeater_item.parent().parent().parent().parent().find('.area_id_repeater').attr('title', '{{"Nothing Selected"|__}}');
                    repeater_item.parent().parent().parent().parent().find('.area_id_repeater').html(data.html);
                    repeater_item.parent().parent().parent().parent().find('.area_id_repeater').selectpicker("refresh");
                }
            });
        }
    });

    $("#kt_repeater_addresses").repeater({
        initEmpty: false,
        show: function() {
            var repeater_item = $(this);
            repeater_item.find('select').selectpicker('destroy');
            repeater_item.find('select').selectpicker();
            var map_canvas  = repeater_item.find(".map_canvas");
            var map_data    = repeater_item.find(".location");
            repeater_item.find(".address").geocomplete({
                map: map_canvas,
                mapOptions: {
                    zoom: 18
                },
                markerOptions: {
                    draggable: true
                },
                details: map_data,
                detailsAttribute: "data-location",
                autoselect: true,
            });
            repeater_item.find(".address").bind("geocode:dragged", function(event, latLng){
                repeater_item.find("input[data-location=lat]").val(latLng.lat());
                repeater_item.find("input[data-location=lng]").val(latLng.lng());
            });
            repeater_item.slideDown();


            repeater_item.on('changed.bs.select', '.country_id', function(e, clickedIndex, newValue, oldValue){
                var selected = $(e.currentTarget).val();
                if(selected != ''){
                    $.request('onListstates', {
                        data: {id: selected},
                        success: function(data) {
                            repeater_item.find('.state_id').selectpicker("destroy");
                            repeater_item.find('.state_id').attr('title', '{{"Nothing Selected"|__}}');
                            repeater_item.find('.state_id').html(data.html);
                            repeater_item.find('.state_id').selectpicker("refresh");
                        }
                    });
                }
            });
            repeater_item.on('changed.bs.select', '.state_id', function(e, clickedIndex, newValue, oldValue){
                var selected = $(e.currentTarget).val();
                if(selected != ''){
                    $.request('onListcities', {
                        data: {id: selected},
                        success: function(data) {
                            repeater_item.find('.city_id').selectpicker("destroy");
                            repeater_item.find('.city_id').attr('title', '{{"Nothing Selected"|__}}');
                            repeater_item.find('.city_id').html(data.html);
                            repeater_item.find('.city_id').selectpicker("refresh");
                        }
                    });
                }
            });
            repeater_item.on('changed.bs.select', '.city_id', function(e, clickedIndex, newValue, oldValue){
                var selected = $(e.currentTarget).val();
                if(selected != ''){
                    $.request('onListareas', {
                        data: {id: selected},
                        success: function(data) {
                            repeater_item.find('.area_id').selectpicker("destroy");
                            repeater_item.find('.area_id').attr('title', '{{"Nothing Selected"|__}}');
                            repeater_item.find('.area_id').html(data.html);
                            repeater_item.find('.area_id').selectpicker("refresh");
                        }
                    });
                }
            });
        },
        hide: function(e) {
            $(this).slideUp(e);
        }
    });
    $('.first-child').remove();
</script>
{% endput %}
